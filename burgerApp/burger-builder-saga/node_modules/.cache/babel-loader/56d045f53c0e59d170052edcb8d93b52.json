{"ast":null,"code":"import _objectSpread from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport var purchaseBurgerSuccess = function purchaseBurgerSuccess(id, orderData) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport var purchaseBurgerFail = function purchaseBurgerFail(error) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport var purchaseBurgerStart = function purchaseBurgerStart() {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport var purchaseBurger = function purchaseBurger(orderData, token) {\n  return function (dispatch) {\n    dispatch(purchaseBurgerStart());\n    axios.post('/orders.json?auth=' + token, orderData).then(function (response) {\n      dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n    }).catch(function (error) {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport var purchaseInit = function purchaseInit() {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport var fetchOrdersSuccess = function fetchOrdersSuccess(orders) {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport var fetchOrdersFail = function fetchOrdersFail(error) {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport var fetchOrdersStart = function fetchOrdersStart(error) {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport var fetchOrders = function fetchOrders(token, userId) {\n  return function (dispatch) {\n    dispatch(fetchOrdersStart());\n    var queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios.get('/orders.json?' + queryParams).then(function (res) {\n      var fetchedOrders = [];\n\n      for (var key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    }).catch(function (err) {\n      dispatch(fetchOrdersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = error => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n            axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error))\n            });\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = orders => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = error => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = error => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart())\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json?' + queryParams)\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                    id: key\n                });\n                }\n            dispatch(fetchOrdersSuccess(fetchedOrders))\n        })\n        .catch(err => {\n            dispatch(fetchOrdersFail(err))\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}