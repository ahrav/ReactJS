{"ast":null,"code":"import _objectSpread from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var updateObject = function updateObject(oldObject, updateValues) {\n  return _objectSpread({}, oldObject, updateValues);\n};\nexport var checkValidity = function checkValidity(value, rules) {\n  var isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    var _pattern = /^\\d+$/;\n    isValid = _pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/src/shared/utility.js"],"names":["updateObject","oldObject","updateValues","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":";AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAYC,YAAZ,EAA6B;AACrD,2BACOD,SADP,EAEOC,YAFP;AAIH,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAC3C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACR,WAAO,IAAP;AACH;;AAED,MAAIA,KAAK,CAACE,QAAV,EAAoB;AAChBD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACH;;AAED,MAAID,KAAK,CAACI,SAAV,EAAqB;AACjBH,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACH;;AAED,MAAID,KAAK,CAACM,SAAV,EAAqB;AACjBL,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACH;;AAED,MAAID,KAAK,CAACO,OAAV,EAAmB;AACf,QAAMC,OAAO,GAAG,uIAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,MAAID,KAAK,CAACU,SAAV,EAAqB;AACjB,QAAMF,QAAO,GAAG,OAAhB;AACAP,IAAAA,OAAO,GAAGO,QAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,SAAOA,OAAP;AACH,CA7BM","sourcesContent":["export const updateObject = (oldObject, updateValues) => {\n    return {\n        ...oldObject,\n        ...updateValues\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}"]},"metadata":{},"sourceType":"module"}