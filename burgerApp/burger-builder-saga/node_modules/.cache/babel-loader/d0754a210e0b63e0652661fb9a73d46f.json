{"ast":null,"code":"var _jsxFileName = \"/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { logoutSaga } from './store/sagas/auth';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nvar composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nvar rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, sagaMiddleware)));\nsagaMiddleware.run(logoutSaga);\nvar app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n})));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/src/index.js"],"names":["React","ReactDOM","Provider","thunk","createStore","applyMiddleware","compose","combineReducers","createSagaMiddleware","logoutSaga","burgerBuilderReducer","orderReducer","authReducer","App","serviceWorker","BrowserRouter","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","burgerBuilder","order","auth","sagaMiddleware","store","run","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,IAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQf,OAAxH;AAEA,IAAMgB,WAAW,GAAGf,eAAe,CAAC;AAChCgB,EAAAA,aAAa,EAAEb,oBADiB;AAEhCc,EAAAA,KAAK,EAAEb,YAFyB;AAGhCc,EAAAA,IAAI,EAAEb;AAH0B,CAAD,CAAnC;AAMA,IAAMc,cAAc,GAAGlB,oBAAoB,EAA3C;AAGA,IAAMmB,KAAK,GAAGvB,WAAW,CAACkB,WAAD,EAAcN,gBAAgB,CAACX,eAAe,CAACF,KAAD,EAAQuB,cAAR,CAAhB,CAA9B,CAAzB;AAEAA,cAAc,CAACE,GAAf,CAAmBnB,UAAnB;AAEA,IAAMoB,GAAG,GACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;AAOA1B,QAAQ,CAAC6B,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { logoutSaga } from './store/sagas/auth';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, sagaMiddleware)));\n\nsagaMiddleware.run(logoutSaga);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}