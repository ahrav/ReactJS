{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logoutSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkAuthTimeoutSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(authUserSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(authCheckStateSaga);\n\nimport { put, delay } from 'redux-saga/effects/';\nimport * as actions from '../actions/index';\nimport axios from 'axios';\n;\nexport function logoutSaga(action) {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return localStorage.removeItem('token');\n\n        case 2:\n          _context.next = 4;\n          return localStorage.removeItem('expirationDate');\n\n        case 4:\n          _context.next = 6;\n          return localStorage.removeItem('userId');\n\n        case 6:\n          _context.next = 8;\n          return put(actions.logoutSucceed());\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function checkAuthTimeoutSaga(action) {\n  return _regeneratorRuntime.wrap(function checkAuthTimeoutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return delay(action.expirationTime * 1000);\n\n        case 2:\n          _context2.next = 4;\n          return put(actions.logout());\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function authUserSaga(action) {\n  var authData, url, response, expirationDate;\n  return _regeneratorRuntime.wrap(function authUserSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return put(actions.authStart());\n\n        case 2:\n          authData = {\n            email: action.email,\n            password: action.password,\n            returnSecureToken: true\n          };\n          url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBIuWmAb_GUkcYLmWIgBjWSKC_Skj_jjAg';\n\n          if (!action.isSignUp) {\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBIuWmAb_GUkcYLmWIgBjWSKC_Skj_jjAg';\n          }\n\n          _context3.prev = 5;\n          _context3.next = 8;\n          return axios.post(url, authData);\n\n        case 8:\n          response = _context3.sent;\n          _context3.next = 11;\n          return new Date(new Date().getTime() + response.data.expiresIn * 1000);\n\n        case 11:\n          expirationDate = _context3.sent;\n          _context3.next = 14;\n          return localStorage.setItem('token', response.data.idToken);\n\n        case 14:\n          _context3.next = 16;\n          return localStorage.setItem('expirationDate', expirationDate);\n\n        case 16:\n          _context3.next = 18;\n          return localStorage.setItem('userId', response.data.localId);\n\n        case 18:\n          _context3.next = 20;\n          return put(actions.authSuccess(response.data.idToken, response.data.localId));\n\n        case 20:\n          _context3.next = 22;\n          return put(actions.checkAuthTimeout(response.data.expiresIn));\n\n        case 22:\n          _context3.next = 28;\n          break;\n\n        case 24:\n          _context3.prev = 24;\n          _context3.t0 = _context3[\"catch\"](5);\n          _context3.next = 28;\n          return put(actions.authFail(_context3.t0.response.data.error));\n\n        case 28:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[5, 24]]);\n}\nexport function authCheckStateSaga(action) {\n  var token, expirationDate, userId;\n  return _regeneratorRuntime.wrap(function authCheckStateSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return localStorage.getItem('token');\n\n        case 2:\n          token = _context4.sent;\n\n          if (token) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 6;\n          return put(actions.logout());\n\n        case 6:\n          _context4.next = 23;\n          break;\n\n        case 8:\n          _context4.next = 10;\n          return new Date(localStorage.getItem('expirationDate'));\n\n        case 10:\n          expirationDate = _context4.sent;\n\n          if (!(expirationDate > new Date())) {\n            _context4.next = 21;\n            break;\n          }\n\n          _context4.next = 14;\n          return localStorage.getItem('userId');\n\n        case 14:\n          userId = _context4.sent;\n          _context4.next = 17;\n          return put(actions.authSuccess(token, userId));\n\n        case 17:\n          _context4.next = 19;\n          return put(actions.checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n\n        case 19:\n          _context4.next = 23;\n          break;\n\n        case 21:\n          _context4.next = 23;\n          return put(actions.logout());\n\n        case 23:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/src/store/sagas/auth.js"],"names":["logoutSaga","checkAuthTimeoutSaga","authUserSaga","authCheckStateSaga","put","delay","actions","axios","action","localStorage","removeItem","logoutSucceed","expirationTime","logout","authStart","authData","email","password","returnSecureToken","url","isSignUp","post","response","Date","getTime","data","expiresIn","expirationDate","setItem","idToken","localId","authSuccess","checkAuthTimeout","authFail","error","getItem","token","userId"],"mappings":"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","sourcesContent":["import { put, delay } from 'redux-saga/effects/';\nimport * as actions from '../actions/index';\nimport axios from 'axios';;\n\nexport function* logoutSaga(action) {\n    yield localStorage.removeItem('token');\n    yield localStorage.removeItem('expirationDate');\n    yield localStorage.removeItem('userId')\n    yield put(actions.logoutSucceed())\n}\n\nexport function* checkAuthTimeoutSaga(action) {\n    yield delay(action.expirationTime * 1000)\n    yield put(actions.logout())\n}\n\nexport function* authUserSaga(action) {\n    yield put(actions.authStart())\n    const authData = {\n        email: action.email,\n        password: action.password,\n        returnSecureToken: true\n    };\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBIuWmAb_GUkcYLmWIgBjWSKC_Skj_jjAg';\n    if (!action.isSignUp){\n        url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBIuWmAb_GUkcYLmWIgBjWSKC_Skj_jjAg'\n        \n    }\n    try {\n        const response = yield axios.post(url, authData)\n        \n            const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000)\n            yield localStorage.setItem('token', response.data.idToken);\n            yield localStorage.setItem('expirationDate', expirationDate);\n            yield localStorage.setItem('userId', response.data.localId);\n            yield put(actions.authSuccess(response.data.idToken, response.data.localId));\n            yield put(actions.checkAuthTimeout(response.data.expiresIn));\n    } catch(error) {\n        yield put(actions.authFail(error.response.data.error))\n    }\n}\n\nexport function* authCheckStateSaga(action) {\n    const token = yield localStorage.getItem('token');\n    if (!token) {\n        yield put(actions.logout());\n    } else {\n        const expirationDate =  yield new Date(localStorage.getItem('expirationDate'));\n        if (expirationDate > new Date()) {\n            const userId = yield localStorage.getItem('userId')\n            yield put(actions.authSuccess(token, userId))\n            yield put(actions.checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ) )\n        } else {\n            yield put(actions.logout())\n        }     \n    }\n}"]},"metadata":{},"sourceType":"module"}