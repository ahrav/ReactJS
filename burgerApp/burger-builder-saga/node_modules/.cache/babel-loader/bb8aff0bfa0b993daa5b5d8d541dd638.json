{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nvar purchaseBurgerStart = function purchaseBurgerStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar purchaseBurgerSuccess = function purchaseBurgerSuccess(state, action) {\n  var newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nvar purchaseBurgerFail = function purchaseBurgerFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar purchaseInit = function purchaseInit(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar fetchOrdersStart = function fetchOrdersStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar fetchOrdersSuccess = function fetchOrdersSuccess(state, action) {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nvar fetchOrdersFail = function fetchOrdersFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseBurgerStart","state","action","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","purchaseInit","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","type","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, {id: action.orderId})\n    return updateObject(state, {loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)})\n}\n\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, {orders: action.orders,\n        loading: false})\n}\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action)\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action)\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action)\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action)\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}