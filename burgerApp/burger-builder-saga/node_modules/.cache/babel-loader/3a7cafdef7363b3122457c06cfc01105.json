{"ast":null,"code":"import _classCallCheck from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Orders).apply(this, arguments));\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var orders = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n\n      if (!this.props.loading) {\n        orders = this.props.orders.map(function (order) {\n          return React.createElement(Order, {\n            key: order.id,\n            ingredients: order.ingredients,\n            price: +order.totalPrice,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, orders);\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrders: function onFetchOrders(token, userId) {\n      return dispatch(actions.fetchOrders(token, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","actions","connect","Spinner","Orders","props","onFetchOrders","token","userId","orders","loading","map","order","id","ingredients","totalPrice","mapStateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;IAEMC,M;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC,EAA2C,KAAKF,KAAL,CAAWG,MAAtD;AACH;;;6BAEQ;AACL,UAAIC,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,UAAI,CAAC,KAAKJ,KAAL,CAAWK,OAAhB,EAAwB;AACpBD,QAAAA,MAAM,GACF,KAAKJ,KAAL,CAAWI,MAAX,CAAkBE,GAAlB,CAAsB,UAAAC,KAAK;AAAA,iBACvB,oBAAC,KAAD;AACA,YAAA,GAAG,EAAEA,KAAK,CAACC,EADX;AAEA,YAAA,WAAW,EAAED,KAAK,CAACE,WAFnB;AAGA,YAAA,KAAK,EAAE,CAACF,KAAK,CAACG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADuB;AAAA,SAA3B,CADJ;AAQH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,MADL,CADJ;AAKH;;;;EAvBgBZ,S;;AAwBpB;;AAED,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHR,IAAAA,MAAM,EAAEQ,KAAK,CAACL,KAAN,CAAYH,MADjB;AAEHC,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF,OAFlB;AAGHH,IAAAA,KAAK,EAAEU,KAAK,CAACC,IAAN,CAAWX,KAHf;AAIHC,IAAAA,MAAM,EAAES,KAAK,CAACC,IAAN,CAAWV;AAJhB,GAAP;AAMH,CAPD;;AASA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHd,IAAAA,aAAa,EAAE,uBAACC,KAAD,EAAQC,MAAR;AAAA,aAAmBY,QAAQ,CAACnB,OAAO,CAACoB,WAAR,CAAoBd,KAApB,EAA2BC,MAA3B,CAAD,CAA3B;AAAA;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,gBAAgB,CAACI,MAAD,EAASL,KAAT,CAA7D,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\nimport { connect } from 'react-redux'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }  \n\n    render() {\n        let orders = <Spinner />\n        if (!this.props.loading){\n            orders = \n                this.props.orders.map(order => (\n                    <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={+order.totalPrice}/>\n                ))\n            \n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}