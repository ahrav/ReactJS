{"ast":null,"code":"import _objectSpread from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      var updatedIngredients = updateObject(state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1));\n      var updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      var updatedIngs = updateObject(state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1));\n      var updateState = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updateState);\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENTS","updatedIngredients","ingredientName","updatedState","REMOVE_INGREDIENTS","updatedIngs","updateState","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,WAAW,CAACe,eAAjB;AACI,UAAMC,kBAAkB,GAAGf,YAAY,CAAEW,KAAK,CAACT,WAAR,sBAAuBU,MAAM,CAACI,cAA9B,EAA+CL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C,CAA1F,EAAvC;AACA,UAAMC,YAAY,GAAG;AACjBf,QAAAA,WAAW,EAAEa,kBADI;AAEjBZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAF/B,OAArB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQM,YAAR,CAAnB;;AACJ,SAAKlB,WAAW,CAACmB,kBAAjB;AACI,UAAMC,WAAW,GAAGnB,YAAY,CAAEW,KAAK,CAACT,WAAR,sBAAuBU,MAAM,CAACI,cAA9B,EAA+CL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C,CAA1F,EAAhC;AACA,UAAMI,WAAW,GAAG;AAChBlB,QAAAA,WAAW,EAAEiB,WADG;AAEhBhB,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAFhC,OAApB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQS,WAAR,CAAnB;;AACJ,SAAKrB,WAAW,CAACsB,eAAjB;AACI,+BACOV,KADP;AAEIT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADjB;AAETG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFjB;AAGTF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHlB;AAITC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJhB,SAFjB;AAQIL,QAAAA,UAAU,EAAE,CARhB;AASIC,QAAAA,KAAK,EAAE;AATX;;AAWJ,SAAKL,WAAW,CAACuB,wBAAjB;AACI,+BACOX,KADP;AAEIP,QAAAA,KAAK,EAAE;AAFX;;AAIJ;AACI,aAAOO,KAAP;AAjCR;AAmCH,CApCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.ADD_INGREDIENTS:\n            const updatedIngredients = updateObject( state.ingredients, {[action.ingredientName]: state.ingredients[action.ingredientName] + 1})\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n            return updateObject(state, updatedState);\n        case actionTypes.REMOVE_INGREDIENTS:\n            const updatedIngs = updateObject( state.ingredients, {[action.ingredientName]: state.ingredients[action.ingredientName] - 1})\n            const updateState = {\n                ingredients: updatedIngs,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n            return updateObject(state, updateState);\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: {\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    cheese: action.ingredients.cheese,\n                    meat: action.ingredients.meat\n                },\n                totalPrice: 4,\n                error: false\n            }\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}