{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nvar authStart = function authStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar authSuccess = function authSuccess(state, action) {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nvar authFail = function authFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar authLogout = function authLogout(state, action) {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nvar setAuthRedirectPath = function setAuthRedirectPath(state, action) {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,gBAAgB,EAAE;AALD,CAArB;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACJ,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD,EAAQC,MAAR,EAAmB;AACnC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACvBN,IAAAA,KAAK,EAAEO,MAAM,CAACE,OADS;AAEvBR,IAAAA,MAAM,EAAEM,MAAM,CAACN,MAFQ;AAGvBC,IAAAA,KAAK,EAAE,IAHgB;AAIvBC,IAAAA,OAAO,EAAE;AAJc,GAAR,CAAnB;AAMH,CAPD;;AASA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAQC,MAAR,EAAmB;AAChC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACJ,IAAAA,KAAK,EAAEK,MAAM,CAACL,KAAf;AAAsBC,IAAAA,OAAO,EAAE;AAA/B,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACL,KAAD,EAAQC,MAAR,EAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACN,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACN,KAAD,EAAQC,MAAR,EAAmB;AAC3C,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACF,IAAAA,gBAAgB,EAAEG,MAAM,CAACM;AAA1B,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAgC;AAAA,MAA/BR,KAA+B,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC5C,UAAQA,MAAM,CAACQ,IAAf;AACI,SAAKlB,WAAW,CAACmB,UAAjB;AAA6B,aAAOX,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC7B,SAAKV,WAAW,CAACoB,YAAjB;AAAgC,aAAOT,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AAChC,SAAKV,WAAW,CAACqB,SAAjB;AAA6B,aAAOR,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AAC7B,SAAKV,WAAW,CAACsB,WAAjB;AAA+B,aAAOR,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AAC/B,SAAKV,WAAW,CAACuB,sBAAjB;AAA0C,aAAOR,mBAAmB,CAACN,KAAD,EAAQC,MAAR,CAA1B;;AAC1C;AACI,aAAOD,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error: null, loading: true});\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {error: action.error, loading: false})\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {token: null, userId: null})\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {authRedirectPath: action.path})\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS : return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL : return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT : return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH : return setAuthRedirectPath(state, action);\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}