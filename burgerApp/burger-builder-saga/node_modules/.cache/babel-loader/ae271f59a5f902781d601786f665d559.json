{"ast":null,"code":"import _defineProperty from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar addIngredient = function addIngredient(state, action) {\n  var updatedIngredients = updateObject(state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1));\n  var updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nvar removeIngredient = function removeIngredient(state, action) {\n  var updatedIngs = updateObject(state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1));\n  var updateState = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updateState);\n};\n\nvar setIngredients = function setIngredients(state, action) {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: false\n  });\n};\n\nvar fetchIngredientsFailed = function fetchIngredientsFailed(state, action) {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredients","ingredientName","updatedState","removeIngredient","updatedIngs","updateState","setIngredients","fetchIngredientsFailed","reducer","type","ADD_INGREDIENTS","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredients = updateObject( state.ingredients, {[action.ingredientName]: state.ingredients[action.ingredientName] + 1})\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedState);\n}\nconst removeIngredient = (state, action) => {\n    const updatedIngs = updateObject( state.ingredients, {[action.ingredientName]: state.ingredients[action.ingredientName] - 1})\n    const updateState = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updateState);\n}\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {ingredients: {\n        salad: action.ingredients.salad,\n        bacon: action.ingredients.bacon,\n        cheese: action.ingredients.cheese,\n        meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: false\n    })\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, {error: true})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.ADD_INGREDIENTS: return addIngredient(state, action)\n        case actionTypes.REMOVE_INGREDIENTS: return removeIngredient(state, action)\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action)\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}