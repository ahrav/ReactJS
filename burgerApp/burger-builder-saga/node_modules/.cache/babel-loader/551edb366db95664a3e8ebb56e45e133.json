{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logoutSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkAuthTimeoutSaga);\n\nimport { put, delay } from 'redux-saga/effects/';\nimport * as actionTypes from '../actions/actionTypes';\nimport * as actions from '../actions/index';\nexport function logoutSaga(action) {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return localStorage.removeItem('token');\n\n        case 2:\n          _context.next = 4;\n          return localStorage.removeItem('expirationDate');\n\n        case 4:\n          _context.next = 6;\n          return localStorage.removeItem('userId');\n\n        case 6:\n          _context.next = 8;\n          return put(actions.logoutSucceed());\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function checkAuthTimeoutSaga(action) {\n  return _regeneratorRuntime.wrap(function checkAuthTimeoutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return delay(action.expirationTime * 1000);\n\n        case 2:\n          _context2.next = 4;\n          return put(actions.logout());\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/src/store/sagas/auth.js"],"names":["logoutSaga","checkAuthTimeoutSaga","put","delay","actionTypes","actions","action","localStorage","removeItem","logoutSucceed","expirationTime","logout"],"mappings":";;;;yBAIiBA,U;;;yBAOAC,oB;;AAXjB,SAASC,GAAT,EAAcC,KAAd,QAA2B,qBAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAO,SAAUL,UAAV,CAAqBM,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,YAAY,CAACC,UAAb,CAAwB,OAAxB,CAAN;;AADG;AAAA;AAEH,iBAAMD,YAAY,CAACC,UAAb,CAAwB,gBAAxB,CAAN;;AAFG;AAAA;AAGH,iBAAMD,YAAY,CAACC,UAAb,CAAwB,QAAxB,CAAN;;AAHG;AAAA;AAIH,iBAAMN,GAAG,CAACG,OAAO,CAACI,aAAR,EAAD,CAAT;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,OAAO,SAAUR,oBAAV,CAA+BK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMH,KAAK,CAACG,MAAM,CAACI,cAAP,GAAwB,IAAzB,CAAX;;AADG;AAAA;AAEH,iBAAMR,GAAG,CAACG,OAAO,CAACM,MAAR,EAAD,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, delay } from 'redux-saga/effects/';\nimport * as actionTypes from '../actions/actionTypes';\nimport * as actions from '../actions/index'\n\nexport function* logoutSaga(action) {\n    yield localStorage.removeItem('token');\n    yield localStorage.removeItem('expirationDate');\n    yield localStorage.removeItem('userId')\n    yield put(actions.logoutSucceed())\n}\n\nexport function* checkAuthTimeoutSaga(action) {\n    yield delay(action.expirationTime * 1000)\n    yield put(actions.logout())\n}"]},"metadata":{},"sourceType":"module"}