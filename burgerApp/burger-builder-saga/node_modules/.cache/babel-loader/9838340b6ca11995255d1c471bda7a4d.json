{"ast":null,"code":"import _objectSpread from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(purchaseBurgerSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchOrdersSaga);\n\nimport { put } from 'redux-saga/effects/';\nimport * as actions from '../actions/index';\nimport axios from '../../axios-orders';\nexport function purchaseBurgerSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function purchaseBurgerSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put(actions.purchaseBurgerStart());\n\n        case 2:\n          _context.prev = 2;\n          _context.next = 5;\n          return axios.post('/orders.json?auth=' + action.token, action.orderData);\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return put(actions.purchaseBurgerSuccess(response.data.name, action.orderData));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](2);\n          _context.next = 14;\n          return put(action.purchaseBurgerFail(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 10]]);\n}\nexport function fetchOrdersSaga(action) {\n  var queryParams, res, fetchedOrders, key;\n  return _regeneratorRuntime.wrap(function fetchOrdersSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\n\n        case 2:\n          queryParams = _context2.sent;\n          _context2.prev = 3;\n          _context2.next = 6;\n          return axios.get('/orders.json?' + queryParams);\n\n        case 6:\n          res = _context2.sent;\n          fetchedOrders = [];\n\n          for (key in res.data) {\n            fetchedOrders.push(_objectSpread({}, res.data[key], {\n              id: key\n            }));\n          }\n\n          _context2.next = 11;\n          return put(actions.fetchOrdersSuccess(fetchedOrders));\n\n        case 11:\n          _context2.next = 17;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](3);\n          _context2.next = 17;\n          return put(actions.fetchOrdersFail(_context2.t0));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[3, 13]]);\n}","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder-saga/src/store/sagas/order.js"],"names":["purchaseBurgerSaga","fetchOrdersSaga","put","actions","axios","action","purchaseBurgerStart","post","token","orderData","response","purchaseBurgerSuccess","data","name","purchaseBurgerFail","userId","queryParams","get","res","fetchedOrders","key","push","id","fetchOrdersSuccess","fetchOrdersFail"],"mappings":";;;;;yBAIiBA,kB;;;yBAUAC,e;;AAdjB,SAASC,GAAT,QAAoB,qBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,SAAUJ,kBAAV,CAA6BK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMH,GAAG,CAACC,OAAO,CAACG,mBAAR,EAAD,CAAT;;AADG;AAAA;AAAA;AAGkB,iBAAMF,KAAK,CAACG,IAAN,CAAW,uBAAuBF,MAAM,CAACG,KAAzC,EAAgDH,MAAM,CAACI,SAAvD,CAAN;;AAHlB;AAGOC,UAAAA,QAHP;AAAA;AAIC,iBAAMR,GAAG,CAACC,OAAO,CAACQ,qBAAR,CAA8BD,QAAQ,CAACE,IAAT,CAAcC,IAA5C,EAAkDR,MAAM,CAACI,SAAzD,CAAD,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMP,GAAG,CAACG,MAAM,CAACS,kBAAP,aAAD,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAAUb,eAAV,CAA0BI,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACiB,iBAAM,WAAWA,MAAM,CAACG,KAAlB,GAA0B,6BAA1B,GAA0DH,MAAM,CAACU,MAAjE,GAA0E,GAAhF;;AADjB;AACGC,UAAAA,WADH;AAAA;AAAA;AAGa,iBAAMZ,KAAK,CAACa,GAAN,CAAU,kBAAkBD,WAA5B,CAAN;;AAHb;AAGOE,UAAAA,GAHP;AAIOC,UAAAA,aAJP,GAIuB,EAJvB;;AAKC,eAASC,GAAT,IAAgBF,GAAG,CAACN,IAApB,EAAyB;AACrBO,YAAAA,aAAa,CAACE,IAAd,mBACOH,GAAG,CAACN,IAAJ,CAASQ,GAAT,CADP;AAEAE,cAAAA,EAAE,EAAEF;AAFJ;AAIH;;AAVF;AAWC,iBAAMlB,GAAG,CAACC,OAAO,CAACoB,kBAAR,CAA2BJ,aAA3B,CAAD,CAAT;;AAXD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaC,iBAAMjB,GAAG,CAACC,OAAO,CAACqB,eAAR,cAAD,CAAT;;AAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put } from 'redux-saga/effects/';\nimport * as actions from '../actions/index';\nimport axios from '../../axios-orders';\n\nexport function* purchaseBurgerSaga(action) {\n    yield put(actions.purchaseBurgerStart());\n    try {\n        const response = yield axios.post('/orders.json?auth=' + action.token, action.orderData)\n        yield put(actions.purchaseBurgerSuccess(response.data.name, action.orderData))\n    } catch (error) {\n        yield put(action.purchaseBurgerFail(error))\n    }\n}\n\nexport function* fetchOrdersSaga(action) {\n    const queryParams = yield '?auth=' + action.token + '&orderBy=\"userId\"&equalTo=\"' + action.userId + '\"';\n    try {\n        const res = yield axios.get('/orders.json?' + queryParams)\n        const fetchedOrders = [];\n        for (let key in res.data){\n            fetchedOrders.push({\n                ...res.data[key],\n            id: key\n        });\n        }\n        yield put(actions.fetchOrdersSuccess(fetchedOrders))\n    } catch(error) {\n        yield put(actions.fetchOrdersFail(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}