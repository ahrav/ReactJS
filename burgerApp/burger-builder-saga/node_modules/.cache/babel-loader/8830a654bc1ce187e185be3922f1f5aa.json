{"ast":null,"code":"import _classCallCheck from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nvar ContactData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Full Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Zip Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Email'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      var order = {\n        ingredients: _this.props.ingredients,\n        totalPrice: _this.props.price,\n        customer: {\n          name: 'Ahrav dutta',\n          address: \"Aav's home\",\n          zipCode: '90024',\n          country: \"USA\"\n        },\n        email: \"swaaggeran@swag.com\",\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(function (response) {\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"render\",\n    value: function render() {\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.key,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        clicked: this.orderHandler,\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"ORDER\"));\n\n      if (this.state.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Enter Contact Info\"), form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/ahrav/Desktop/React/burgerApp/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","totalPrice","price","customer","address","post","then","response","history","push","catch","error","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Full Name'\n                },\n                value: ''\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: ''\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip Code'\n                },\n                value: ''\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: ''\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email'\n                },\n                value: ''\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}]\n                },\n                value: ''\n            },\n        },\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({loading: true})\n        const order = {\n            ingredients: this.props.ingredients,\n            totalPrice: this.props.price,\n            customer: {\n                name: 'Ahrav dutta',\n                address: \"Aav's home\",\n                zipCode: '90024',\n                country: \"USA\"\n            },\n            email: \"swaaggeran@swag.com\",\n            deliveryMethod: 'fastest'\n        }\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false})\n                this.props.history.push('/')\n            })\n            .catch(error => {\n                this.setState({loading: false})\n            });\n    }\n\n    render(){\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key],\n            })\n        }\n        let form = (\n            <form>\n                {formElementsArray.map(formElement => (\n                    <Input\n                    key={formElement.key} \n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value} />\n                ))}\n                <Button clicked={this.orderHandler} btnType=\"Success\">ORDER</Button>\n            </form>\n        );\n        if (this.state.loading){\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter Contact Info</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}