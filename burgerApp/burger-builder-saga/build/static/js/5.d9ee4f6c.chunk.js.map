{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","key","style","textTransform","display","margin","border","padding","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","Order_Order","id","totalPrice","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,yICiCHC,EA/BD,SAAAC,GACV,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACPC,IAAKJ,EAAGJ,KACRS,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QACLV,EAAGJ,KARJ,KAQYI,EAAGH,OARf,OAUX,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,mBAAWX,EAAMqB,MAAMC,QAAQ,+CCrB/CC,8LAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,yCAItD,IAAIC,EAASnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAWb,OAVKL,KAAKxB,MAAM8B,UACZF,EACIJ,KAAKxB,MAAM4B,OAAOrB,IAAI,SAAAR,GAAK,OACvBU,EAAAC,EAAAC,cAACoB,EAAD,CACAnB,IAAKb,EAAMiC,GACX/B,YAAaF,EAAME,YACnBoB,OAAQtB,EAAMkC,gBAKtBxB,EAAAC,EAAAC,cAAA,WACKiB,UApBIM,aAyCNC,sBAfS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAMrC,MAAM6B,OACpBE,QAASM,EAAMrC,MAAM+B,QACrBJ,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,SAIA,SAAAW,GACvB,MAAO,CACHb,cAAe,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,OAI/DQ,CAA6CK,YAAiBjB,EAAQkB","file":"static/js/5.d9ee4f6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","import React from 'react';\nimport classes from './Order.css'\n\nconst order = props => {\n    const ingredients = []\n\n    for (let ingredientName in props.ingredients){\n        ingredients.push(\n            {\n                name: ingredientName, \n                amount: props.ingredients[ingredientName]\n            }\n        )\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n        key={ig.name}\n        style={{\n            textTransform: 'capitalize',\n            display: 'inline-block',\n            margin: '0 8px',\n            border: '1px solid #ccc',\n            padding: '5px' \n            }}>{ig.name} ({ig.amount})</span>\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>$ {props.price.toFixed(2)}</strong></p>\n        </div>\n    )\n};\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\nimport { connect } from 'react-redux'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }  \n\n    render() {\n        let orders = <Spinner />\n        if (!this.props.loading){\n            orders = \n                this.props.orders.map(order => (\n                    <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={+order.totalPrice}/>\n                ))\n            \n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}